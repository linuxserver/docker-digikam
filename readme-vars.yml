---

# project information
project_name: digikam
project_url: "https://www.digikam.org/"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png"
project_blurb: "[digiKam]({{ project_url }}): Professional Photo Management with the Power of Open Source"
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}

# development version
development_versions: false

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_env: true
param_usage_include_ports: false
param_env_vars:
  - { env_var: "TZ", env_value: "America/New_York", desc: "Specify a timezone to use EG America/New_York." }
# optional variables
opt_param_usage_include_env: true
opt_param_env_vars:
  - { env_var: "SUBFOLDER", env_value: "/", desc: "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"}
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "/path/to/config", desc: "Users home directory in the container, stores database." }
# optional parameters
opt_param_usage_include_ports: true
opt_param_ports:
  - { external_port: "3000", internal_port: "3000", port_desc: "digiKam desktop gui" }
  - { external_port: "3001", internal_port: "3001", port_desc: "digiKam desktop gui HTTPS" }

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  #### Mysql Internal
  
  When using mysql internal mode for the database you will need to click on "Find" Button for all the required binaries (mysql_install_db,mysqladmin,mysqld). Then select the binary file and press Open.

  The application can be accessed at:

  * http://yourhost:3000/
  * https://yourhost:3001/

  ### Options in all KasmVNC based GUI containers

  This container is based on [Docker Baseimage KasmVNC](https://github.com/linuxserver/docker-baseimage-kasmvnc) which means there are additional environment variables and run configurations to enable or disable specific functionality.

  #### Optional environment variables

  | Variable | Description |
  | :----: | --- |
  | CUSTOM_PORT | Internal port the container listens on for http if it needs to be swapped from the default 3000. |
  | CUSTOM_HTTPS_PORT | Internal port the container listens on for https if it needs to be swapped from the default 3001. |
  | CUSTOM_USER | HTTP Basic auth username, abc is default. |
  | PASSWORD | HTTP Basic auth password, abc is default. If unset there will be no auth |
  | SUBFOLDER | Subfolder for the application if running a subfolder reverse proxy, need both slashes IE `/subfolder/` |
  | TITLE | The page title displayed on the web browser, default "KasmVNC Client". |
  | FM_HOME | This is the home directory (landing) for the file manager, default "/config". |
  | START_DOCKER | If set to false a container with privilege will not automatically start the DinD Docker setup. |
  | DRINODE | If mounting in /dev/dri for [DRI3 GPU Acceleration](https://www.kasmweb.com/kasmvnc/docs/master/gpu_acceleration.html) allows you to specify the device to use IE `/dev/dri/renderD128` |
  | LC_ALL | Set the Language for the container to run as IE `fr_FR.UTF-8` `ar_AE.UTF-8` |
  | NO_DECOR | If set the application will run without window borders for use as a PWA. |
  | NO_FULL | Do not autmatically fullscreen applications when using openbox. |

  #### Optional run configurations

  | Variable | Description |
  | :----: | --- |
  | `--privileged` | Will start a Docker in Docker (DinD) setup inside the container to use docker in an isolated environment. For increased performance mount the Docker directory inside the container to the host IE `-v /home/user/docker-data:/var/lib/docker`. |
  | `-v /var/run/docker.sock:/var/run/docker.sock` | Mount in the host level Docker socket to either interact with it via CLI or use Docker enabled applications. |
  | `--device /dev/dri:/dev/dri` | Mount a GPU into the container, this can be used in conjunction with the `DRINODE` environment variable to leverage a host video card for GPU accelerated appplications. Only **Open Source** drivers are supported IE (Intel,AMDGPU,Radeon,ATI,Nouveau) |

  ### Language Support - Internationalization

  The environment variable `LC_ALL` can be used to start this image in a different language than English simply pass for example to launch the Desktop session in French `LC_ALL=fr_FR.UTF-8`. Some languages like Chinese, Japanese, or Korean will be missing fonts needed to render properly known as cjk fonts, but others may exist and not be installed. We only ensure fonts for Latin characters are present. Fonts can be installed with a mod on startup.

  To install cjk fonts on startup as an example pass the environment variables:

  ```
  -e DOCKER_MODS=linuxserver/mods:universal-package-install
  -e INSTALL_PACKAGES=noto-fonts-cjk
  -e LC_ALL=zh_CN.UTF-8
  ```

  The web interface has the option for "IME Input Mode" in Settings which will allow non english characters to be used from a non en_US keyboard on the client. Once enabled it will perform the same as a local Linux installation set to your locale.

  ### Lossless mode

  This container is capable of delivering a true lossless image at a high framerate to your web browser by changing the Stream Quality preset to "Lossless", more information [here](https://www.kasmweb.com/docs/latest/how_to/lossless.html#technical-background). In order to use this mode from a non localhost endpoint the HTTPS port on 3001 needs to be used. If using a reverse proxy to port 3000 specific headers will need to be set as outlined [here](https://github.com/linuxserver/docker-baseimage-kasmvnc#lossless).

# changelog
changelogs:
  - { date: "10.02.24:", desc: "Update Readme with new env vars and ingest proper PWA icon." }
  - { date: "05.09.23:", desc: "Add openexr dependency." }
  - { date: "18.03.23:", desc: "Rebase to KasmVNC base image." }
  - { date: "20.01.23:", desc: "Added breeze-icons package for icon support." }
  - { date: "21.11.22:", desc: "Trigger upon baseimage updates (arch being a rolling distro has too many dependency breaks otherwise). Release version will be the baseimage build date going forward." }
  - { date: "20.10.22:", desc: "Migrate to s6v3." }
  - { date: "07.03.22:", desc: "Add Exiftool and firefox for image exports." }
  - { date: "20.02.22:", desc: "Add MariaDB, expand documentation." }
  - { date: "15.02.22:", desc: "Rebase to Arch." }
  - { date: "27.12.21:", desc: "Rebase to focal to resolve dependency issues." }
  - { date: "27.03.21:", desc: "Download link fixed." }
  - { date: "20.05.20:", desc: "Initial release." }

